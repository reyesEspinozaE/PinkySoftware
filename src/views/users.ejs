<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>
    <%= title %>
  </title>
  <%- include("partials/head") %>
    <%- include("partials/navigation.ejs") %>
      <!-- Uso de sweetalert2 -->
      <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">
</head>

<body>
  <div class="content-wrapper container mt-4">
    <main>
      <div class="row mb-3">
        <div class="col">
          <button id="btnAddUsuario" class="btnCommon btn btn-primary w-100">Agregar Usuario</button>
        </div>
      </div>
      <div class="table-responsive">
        <table class="table table-striped table-hover table-borderless table-secondary align-middle">
          <thead class="table-light">
            <tr>
              <th>Acciones</th>
              <th>Id</th>
              <th>Nombre</th>
              <th>Email</th>
              <th>Rol</th>
              <th>Contraseña</th>
            </tr>
          </thead>
          <tbody class="table-group-divider">
            <% if (usuarios && usuarios.length> 0) { %>
              <% usuarios.forEach(usuario=> { %>
                <tr class="table-secondary">
                  <td>
                    <a name="detalles" class="btn btn-success btn-sm"
                      data-user-id="<%= usuario.idUsuario %>">Detalles</a>
                    ||
                    <a name="editar" class="btn btn-primary btn-sm" data-user-id="<%= usuario.idUsuario %>">Editar</a>
                    ||
                    <a name="eliminar" class="btn btn-danger btn-sm"
                      data-user-id="<%= usuario.idUsuario %>">Eliminar</a>
                  </td>
                  <td scope="row">
                    <%= usuario.idUsuario %>
                  </td>
                  <td>
                    <%= usuario.nombreUsuario %>
                  </td>
                  <td>
                    <%= usuario.correo %>
                  </td>
                  <td>
                    <%= usuario.rol %>
                  </td>
                  <td>
                    <%= usuario.contrasenia %>
                  </td>
                </tr>
                <% }) %>
                  <% } else { %>
                    <tr>
                      <td colspan="5" class="text-center">No hay usuarios disponibles</td>
                    </tr>
                    <% } %>
          </tbody>
        </table>
      </div>
    </main>
  </div>
</body>
<footer>
  <%- include('partials/footer.ejs')%>
</footer>

</html>


<!-- Uso de sweetalert2 para las alertas (presupuesto agotado) -->
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.js"></script>

<!-- Bootstrap JavaScript Libraries -->

<script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.8/dist/umd/popper.min.js"
  crossorigin="anonymous"></script>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.min.js"
  integrity="sha384-BBtl+eGJRgqQAUMxJ7pMwbEyER4l1g+O15P+16Ep7Q9Q+zqX6gSbd85u4mG4QzX+" crossorigin="anonymous"></script>

<script>
  ////////////////////////////////////////////////////////
  /////////////////// CREATE /////////////////////////////

  // Definimos una variable para la ventana emergente
  var popup;

  // Seleccionamos el botón por su id
  var btnAddUsuario = document.getElementById('btnAddUsuario').addEventListener('click', function () {
    // Abre la ventana emergente para agregar un usuario
    popup = window.open('', 'popup', `width=400,height=370,left=${(window.screen.width/2)-(400/2)},top=${(window.screen.height/2)-(500/2)}`);
    //'width=400,height=370');

    // Contenido del formulario dentro de la ventana emergente
    var formContent = `
        <!DOCTYPE html>
        <html lang="en">
        <head>
            <meta charset="UTF-8">
            <meta name="viewport" content="width=device-width, initial-scale=1.0">
            <title>Agregar Usuario</title>
            <link rel="stylesheet" href="/css/main.css">
        </head>
        <body class="bodyPopup">
           <form class="popup-form">
                <label for="nombreUsuario">Nombre del usuario:</label><br>
                <input type="text" id="nombreUsuario" name="nombreUsuario"><br>

                <label for="correo">Correo electrónico:</label><br>
                <input type="text" id="correo" name="correo"><br>

                <label for="contrasenia">Contraseña:</label><br>
                <input type="text" id="contrasenia" name="contrasenia"><br>

                <label for="rol">Rol:</label><br>
                <input type="text" id="rol" name="rol"><br>

                <button class="btnPopup" type="submit">Guardar</button>
                <button class="btnPopup" type="button" onclick="window.opener.cerrarPopup()">Cancelar</button>
            </form>
        </body>
        </html>
      `;

    // Escribimos el contenido del formulario en la ventana emergente
    popup.document.write(formContent);

    // Definimos el comportamiento del formulario al ser enviado
    popup.document.querySelector('form').addEventListener('submit', function (event) {
      event.preventDefault();
      // Llamar a la función para guardar el nuevo usuario
      btnPopupGuardar();
    });
  });

  // Definimos la función cerrarPopup para cerrar la ventana emergente
  function cerrarPopup() {
    if (popup) {
      popup.close();
    }
  }

  // Definimos la función btnPopupGuardar() para guardar el nuevo usuario

  function btnPopupGuardar() {
    // Obtener los valores de los campos del formulario
    var nombreUsuario = popup.document.getElementById('nombreUsuario').value;
    var correo = popup.document.getElementById('correo').value;
    var contrasenia = popup.document.getElementById('contrasenia').value;
    var rol = popup.document.getElementById('rol').value;

    // Verificar si todos los campos están completos
    if (!nombreUsuario || !correo || !contrasenia || !rol) {
      Swal.fire({
        title: 'Datos incompletos',
        text: 'Por favor complete todos los campos del formulario.',
        icon: 'warning',
        confirmButtonText: 'Entendido',
      });
      return; // Detener la ejecución de la función si los campos están incompletos
    }

    // Objeto con los datos del nuevo usuario
    var nuevoUsuario = {
      nombreUsuario: nombreUsuario,
      correo: correo,
      contrasenia: contrasenia,
      rol: rol
    };

    // Enviar una solicitud POST al servidor para crear el nuevo usuario
    fetch('/users', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify(nuevoUsuario)
    })
      .then(response => response.json())
      .then(data => {
        if (data.mensaje === 'Usuario creado exitosamente') {
          popup.close();
          Swal.fire({
            title: 'Usuario creado exitosamente',
            text: 'El usuario se ha registrado exitosamente',
            icon: 'success',
            confirmButtonText: 'Entendido',
          }).then(() => {
            // Esta línea se ejecutará cuando el usuario presione "Entendido"
            window.location.reload();
          });
        } else {
          Swal.fire({
            title: 'Error al guardar el nuevo usuario',
            text: 'Error al crear el registro del nuevo usuario',
            icon: 'success',
            confirmButtonText: 'Entendido'
          })
        }
      })
      .catch(error => {
        console.error('Error al realizar la solicitud:', error);
      });
  }

  ////////////////////////////////////////////////////////
  /////////////////// Read ///////////////////////////////

  // Ventana emergente para detalles de usuario
  document.querySelectorAll('[name="detalles"]').forEach(btn => {
    btn.addEventListener('click', async function () {
      const userId = this.getAttribute('data-user-id');
      const response = await fetch(`/users/${userId}`, {
        method: 'GET',
        headers: { 'Content-Type': 'application/json' }
      });
      if (response.ok) {
        const usuario = await response.json();
        var formContent = `
            <!DOCTYPE html>
            <html lang="en">
            <head>
              <meta charset="UTF-8">
              <meta name="viewport" content="width=device-width, initial-scale=1.0">
              <title>Detalles de Usuario</title>
              <link rel="stylesheet" href="/css/main.css">
            </head>
            <body class="bodyPopup">
              <div class="popup-form">
                <p ><strong>ID:</strong> ${usuario.idUsuario}</p>
                <p ><strong>Nombre del usuario:</strong> ${usuario.nombreUsuario}</p>
                <p ><strong>Correo electrónico:</strong> ${usuario.correo}</p>
                <p ><strong>Rol:</strong> ${usuario.rol}</p>
                <p ><strong>Contraseña:</strong> ${usuario.contrasenia}</p>
                <button class="btnPopup" type="button" onclick="window.close()">Cerrar</button>
              </div>
            </body>
            </html>
          `;
        var popup = window.open('', 'popup', `width=600,height=300,left=${(window.screen.width/2)-(400/2)},top=${(window.screen.height/2)-(500/2)}`);
        //'width=600,height=300');
        popup.document.write(formContent);
      } else {
        console.error('Error al obtener los detalles del usuario:', await response.text());
      }
    });
  });

  ////////////////////////////////////////////////////////
  /////////////////// Update /////////////////////////////

  // Ventana emergente para editar un usuario
  document.querySelectorAll('[name="editar"]').forEach(btn => {
    btn.addEventListener('click', async function () {
      const userId = this.getAttribute('data-user-id');
      const response = await fetch(`/users/${userId}`, {
        method: 'GET',
        headers: { 'Content-Type': 'application/json' }
      });
      if (response.ok) {
        const usuario = await response.json();
        var formContent = `
            <!DOCTYPE html>
            <html lang="en">
            <head>
              <meta charset="UTF-8">
              <meta name="viewport" content="width=device-width, initial-scale=1.0">
              <title>Editar Usuario</title>
              <link rel="stylesheet" href="/css/main.css">
            </head>
            <body class="bodyPopup">
              <form class="popup-form" id="formEditarUsuario">
                <label for="nombreUsuario">Nombre del usuario:</label><br>
                <input type="text" id="nombreUsuario" name="nombreUsuario" value="${usuario.nombreUsuario}" required><br>
                <label for="correo">Correo electrónico:</label><br>
                <input type="text" id="correo" name="correo" value="${usuario.correo}" required><br>
                <label for="rol">Rol:</label><br>
                <input type="text" id="rol" name="rol" value="${usuario.rol}" required><br>
                <label for="contrasenia">Contraseña:</label><br>
                <input type="text" id="contrasenia" name="contrasenia" value="${usuario.contrasenia}" required><br>
                <button class="btnPopup" type="submit">Actualizar</button>
                <button class="btnPopup" type="button" onclick="window.close()">Cerrar</button>
              </form>
            </body>
            </html>
          `;
        var popup = window.open('', 'popup', `width=400,height=400,left=${(window.screen.width/2)-(400/2)},top=${(window.screen.height/2)-(500/2)}`);
        //'width=400,height=400');
        popup.document.write(formContent);
        popup.document.querySelector('form').addEventListener('submit', function (event) {
          event.preventDefault();
          btnPopupActualizar(userId, popup);
        });
      } else {
        console.error('Error al actualizar el usuario:', await response.text());
      }
    });
  });

  function btnPopupActualizar(userId, popup) {
    var nombreUsuario = popup.document.getElementById('nombreUsuario').value;
    var correo = popup.document.getElementById('correo').value;
    var contrasenia = popup.document.getElementById('contrasenia').value;
    var rol = popup.document.getElementById('rol').value;

    // Verificar si todos los campos están completos
    if (!nombreUsuario || !correo || !contrasenia || !rol) {
      Swal.fire({
        title: 'Datos incompletos',
        text: 'Por favor complete todos los campos del formulario.',
        icon: 'warning',
        confirmButtonText: 'Entendido',
      });
      return; // Detener la ejecución de la función si los campos están incompletos
    }

    var usuarioActualizado = {
      nombreUsuario: nombreUsuario,
      correo: correo,
      contrasenia: contrasenia,
      rol: rol
    };

    fetch(`/users/${userId}`, {
      method: 'PUT',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify(usuarioActualizado)
    })
      .then(response => response.json())
      .then(data => {

        if (data.mensaje === 'Usuario actualizado exitosamente') {
          popup.close();
          Swal.fire({
            title: 'Usuario modificado exitosamente',
            text: `El usuario se ha actualizado exitosamente`,
            icon: 'success',
            confirmButtonText: 'Entendido'
          }).then(() => {
            // Esta línea se ejecutará cuando el usuario presione "Entendido"
            window.location.reload();
          });
        } else {
          Swal.fire({
            title: 'Error al guardar el registro',
            text: 'No se ha podido completar la actualización del registro de usuario.',
            icon: 'warning',
            confirmButtonText: 'Entendido',
          });
        }
      })
      .catch(error => {
        console.error('Error al realizar la solicitud:', error);
      });
  }


  ////////////////////////////////////////////////////////
  /////////////////// Delete /////////////////////////////

  // Manejador de clic para el botón de eliminar
  document.querySelectorAll('[name="eliminar"]').forEach(btn => {
    btn.addEventListener('click', async function () {
      const userId = this.getAttribute('data-user-id');

      // Usar Swal para la confirmación
      const result = await Swal.fire({
        title: '¿Estás seguro?',
        text: '¿Estás seguro de que quieres eliminar este usuario?',
        icon: 'warning',
        showCancelButton: true,
        confirmButtonText: 'Sí, eliminar',
        cancelButtonText: 'Cancelar'
      });

      if (result.isConfirmed) {
        const response = await fetch(`/users/${userId}`, {
          method: 'DELETE',
          headers: { 'Content-Type': 'application/json' }
        });
        const data = await response.json();
        // Aquí se muestra un mensaje de éxito
        //console.log(data);
        Swal.fire({
          title: 'Se ha elimnado el registro',
          text: 'Se ha eliminado el registro de usuario de manera exitosa.',
          icon: 'success',
          confirmButtonText: 'Entendido',
        }).then(() => {
          // Esta línea se ejecutará cuando el usuario presione "Entendido"
          window.location.reload();// Recargar la página después de eliminar el usuario
        });
      }
    });
  });
</script>